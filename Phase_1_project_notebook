{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "881ee0a5-e734-400f-b84e-1a71f47fb661",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\HP\\AppData\\Local\\Temp\\ipykernel_560\\2807283723.py:5: DtypeWarning: Columns (6,7,28) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  aviation_df = pd.read_csv(\"C:/Users/HP/OneDrive/Desktop/archive/AviationData.csv\", encoding='ISO-8859-1')\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Event.Id</th>\n",
       "      <th>Investigation.Type</th>\n",
       "      <th>Accident.Number</th>\n",
       "      <th>Event.Date</th>\n",
       "      <th>Location</th>\n",
       "      <th>Country</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Airport.Code</th>\n",
       "      <th>Airport.Name</th>\n",
       "      <th>...</th>\n",
       "      <th>Purpose.of.flight</th>\n",
       "      <th>Air.carrier</th>\n",
       "      <th>Total.Fatal.Injuries</th>\n",
       "      <th>Total.Serious.Injuries</th>\n",
       "      <th>Total.Minor.Injuries</th>\n",
       "      <th>Total.Uninjured</th>\n",
       "      <th>Weather.Condition</th>\n",
       "      <th>Broad.phase.of.flight</th>\n",
       "      <th>Report.Status</th>\n",
       "      <th>Publication.Date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>20001218X45444</td>\n",
       "      <td>Accident</td>\n",
       "      <td>SEA87LA080</td>\n",
       "      <td>1948-10-24</td>\n",
       "      <td>MOOSE CREEK, ID</td>\n",
       "      <td>United States</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>Personal</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>UNK</td>\n",
       "      <td>Cruise</td>\n",
       "      <td>Probable Cause</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>20001218X45447</td>\n",
       "      <td>Accident</td>\n",
       "      <td>LAX94LA336</td>\n",
       "      <td>1962-07-19</td>\n",
       "      <td>BRIDGEPORT, CA</td>\n",
       "      <td>United States</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>Personal</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>UNK</td>\n",
       "      <td>Unknown</td>\n",
       "      <td>Probable Cause</td>\n",
       "      <td>19-09-1996</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>20061025X01555</td>\n",
       "      <td>Accident</td>\n",
       "      <td>NYC07LA005</td>\n",
       "      <td>1974-08-30</td>\n",
       "      <td>Saltville, VA</td>\n",
       "      <td>United States</td>\n",
       "      <td>36.922223</td>\n",
       "      <td>-81.878056</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>Personal</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>IMC</td>\n",
       "      <td>Cruise</td>\n",
       "      <td>Probable Cause</td>\n",
       "      <td>26-02-2007</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>20001218X45448</td>\n",
       "      <td>Accident</td>\n",
       "      <td>LAX96LA321</td>\n",
       "      <td>1977-06-19</td>\n",
       "      <td>EUREKA, CA</td>\n",
       "      <td>United States</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>Personal</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>IMC</td>\n",
       "      <td>Cruise</td>\n",
       "      <td>Probable Cause</td>\n",
       "      <td>12-09-2000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>20041105X01764</td>\n",
       "      <td>Accident</td>\n",
       "      <td>CHI79FA064</td>\n",
       "      <td>1979-08-02</td>\n",
       "      <td>Canton, OH</td>\n",
       "      <td>United States</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>Personal</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>VMC</td>\n",
       "      <td>Approach</td>\n",
       "      <td>Probable Cause</td>\n",
       "      <td>16-04-1980</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 31 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         Event.Id Investigation.Type Accident.Number  Event.Date  \\\n",
       "0  20001218X45444           Accident      SEA87LA080  1948-10-24   \n",
       "1  20001218X45447           Accident      LAX94LA336  1962-07-19   \n",
       "2  20061025X01555           Accident      NYC07LA005  1974-08-30   \n",
       "3  20001218X45448           Accident      LAX96LA321  1977-06-19   \n",
       "4  20041105X01764           Accident      CHI79FA064  1979-08-02   \n",
       "\n",
       "          Location        Country   Latitude  Longitude Airport.Code  \\\n",
       "0  MOOSE CREEK, ID  United States        NaN        NaN          NaN   \n",
       "1   BRIDGEPORT, CA  United States        NaN        NaN          NaN   \n",
       "2    Saltville, VA  United States  36.922223 -81.878056          NaN   \n",
       "3       EUREKA, CA  United States        NaN        NaN          NaN   \n",
       "4       Canton, OH  United States        NaN        NaN          NaN   \n",
       "\n",
       "  Airport.Name  ... Purpose.of.flight Air.carrier Total.Fatal.Injuries  \\\n",
       "0          NaN  ...          Personal         NaN                  2.0   \n",
       "1          NaN  ...          Personal         NaN                  4.0   \n",
       "2          NaN  ...          Personal         NaN                  3.0   \n",
       "3          NaN  ...          Personal         NaN                  2.0   \n",
       "4          NaN  ...          Personal         NaN                  1.0   \n",
       "\n",
       "  Total.Serious.Injuries Total.Minor.Injuries Total.Uninjured  \\\n",
       "0                    0.0                  0.0             0.0   \n",
       "1                    0.0                  0.0             0.0   \n",
       "2                    NaN                  NaN             NaN   \n",
       "3                    0.0                  0.0             0.0   \n",
       "4                    2.0                  NaN             0.0   \n",
       "\n",
       "  Weather.Condition  Broad.phase.of.flight   Report.Status Publication.Date  \n",
       "0               UNK                 Cruise  Probable Cause              NaN  \n",
       "1               UNK                Unknown  Probable Cause       19-09-1996  \n",
       "2               IMC                 Cruise  Probable Cause       26-02-2007  \n",
       "3               IMC                 Cruise  Probable Cause       12-09-2000  \n",
       "4               VMC               Approach  Probable Cause       16-04-1980  \n",
       "\n",
       "[5 rows x 31 columns]"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "# 1. Load the aviation accident data\n",
    "aviation_df = pd.read_csv(\"C:/Users/HP/OneDrive/Desktop/archive/AviationData.csv\", encoding='ISO-8859-1')\n",
    "\n",
    "# 2. Load US State Codes data \n",
    "state_codes_df = pd.read_csv(\"C:/Users/HP/OneDrive/Desktop/archive/USState_Codes.csv\")\n",
    "\n",
    "aviation_df.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "eb939ffd-a88a-4bdc-8a0c-27b9d20f6b80",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Event.Id                      0\n",
       "Investigation.Type            0\n",
       "Accident.Number               0\n",
       "Event.Date                    0\n",
       "Location                     52\n",
       "Country                     226\n",
       "Latitude                  54507\n",
       "Longitude                 54516\n",
       "Airport.Code              38757\n",
       "Airport.Name              36185\n",
       "Injury.Severity            1000\n",
       "Aircraft.damage            3194\n",
       "Aircraft.Category         56602\n",
       "Registration.Number        1382\n",
       "Make                         63\n",
       "Model                        92\n",
       "Amateur.Built               102\n",
       "Number.of.Engines          6084\n",
       "Engine.Type                7096\n",
       "FAR.Description           56866\n",
       "Schedule                  76307\n",
       "Purpose.of.flight          6192\n",
       "Air.carrier               72241\n",
       "Total.Fatal.Injuries      11401\n",
       "Total.Serious.Injuries    12510\n",
       "Total.Minor.Injuries      11933\n",
       "Total.Uninjured            5912\n",
       "Weather.Condition          4492\n",
       "Broad.phase.of.flight     27165\n",
       "Report.Status              6384\n",
       "Publication.Date          13771\n",
       "dtype: int64"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "aviation_df.isna().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "id": "b01bc48b-62e6-499f-b1da-6658826cd178",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Total.Fatal.Injuries</th>\n",
       "      <th>Total.Serious.Injuries</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>987.000000</td>\n",
       "      <td>987.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>0.750760</td>\n",
       "      <td>0.853090</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>6.624275</td>\n",
       "      <td>6.878229</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>152.000000</td>\n",
       "      <td>137.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Total.Fatal.Injuries  Total.Serious.Injuries\n",
       "count            987.000000              987.000000\n",
       "mean               0.750760                0.853090\n",
       "std                6.624275                6.878229\n",
       "min                0.000000                0.000000\n",
       "25%                0.000000                0.000000\n",
       "50%                0.000000                0.000000\n",
       "75%                0.000000                0.000000\n",
       "max              152.000000              137.000000"
      ]
     },
     "execution_count": 67,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "aviation_df[['Total.Fatal.Injuries', 'Total.Serious.Injuries']].describe()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "id": "64473cc4-1fc0-4696-bd7b-7a22f73b88f4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "sns.boxplot(data=aviation_df[['Total.Fatal.Injuries', 'Total.Serious.Injuries']])\n",
    "plt.title(\"Boxplot of Injuries\")\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "id": "3a48ffa1-356e-4708-9756-a8cd71f8e974",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Event.Id</th>\n",
       "      <th>Investigation.Type</th>\n",
       "      <th>Accident.Number</th>\n",
       "      <th>Event.Date</th>\n",
       "      <th>Location</th>\n",
       "      <th>Country</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Airport.Code</th>\n",
       "      <th>Airport.Name</th>\n",
       "      <th>...</th>\n",
       "      <th>Purpose.of.flight</th>\n",
       "      <th>Air.carrier</th>\n",
       "      <th>Total.Fatal.Injuries</th>\n",
       "      <th>Total.Serious.Injuries</th>\n",
       "      <th>Total.Minor.Injuries</th>\n",
       "      <th>Total.Uninjured</th>\n",
       "      <th>Weather.Condition</th>\n",
       "      <th>Broad.phase.of.flight</th>\n",
       "      <th>Report.Status</th>\n",
       "      <th>Publication.Date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>59584</th>\n",
       "      <td>20050927X01540</td>\n",
       "      <td>Incident</td>\n",
       "      <td>LAX05IA312</td>\n",
       "      <td>2005-09-21</td>\n",
       "      <td>Los Angeles, CA</td>\n",
       "      <td>United States</td>\n",
       "      <td>33.9425</td>\n",
       "      <td>-118.408056</td>\n",
       "      <td>KLAX</td>\n",
       "      <td>LOS ANGELES INTERNATIONAL</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Jet Blue Airways, Inc.</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>146.0</td>\n",
       "      <td>VMC</td>\n",
       "      <td>Takeoff</td>\n",
       "      <td>Probable Cause</td>\n",
       "      <td>25-11-2008</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>62142</th>\n",
       "      <td>20070321X00315</td>\n",
       "      <td>Accident</td>\n",
       "      <td>NYC07MA073</td>\n",
       "      <td>2007-03-08</td>\n",
       "      <td>PRINCEVILLE, HI</td>\n",
       "      <td>United States</td>\n",
       "      <td>22.2</td>\n",
       "      <td>-159.433333</td>\n",
       "      <td>HI01</td>\n",
       "      <td>PRINCEVILLE</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Heli-usa Airways, Inc.</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>VMC</td>\n",
       "      <td>Maneuvering</td>\n",
       "      <td>Probable Cause</td>\n",
       "      <td>17-06-2009</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>62453</th>\n",
       "      <td>20070510X00542</td>\n",
       "      <td>Incident</td>\n",
       "      <td>MIA07IA088</td>\n",
       "      <td>2007-05-02</td>\n",
       "      <td>Atlanta, GA</td>\n",
       "      <td>United States</td>\n",
       "      <td>33.636666</td>\n",
       "      <td>-84.428056</td>\n",
       "      <td>ATL</td>\n",
       "      <td>HARTSFIELD - JACKSON ATLANTA</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Omni Air International Inc</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>306.0</td>\n",
       "      <td>VMC</td>\n",
       "      <td>Descent</td>\n",
       "      <td>Probable Cause</td>\n",
       "      <td>29-01-2009</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>62697</th>\n",
       "      <td>20070627X00819</td>\n",
       "      <td>Incident</td>\n",
       "      <td>LAX07IA191</td>\n",
       "      <td>2007-06-13</td>\n",
       "      <td>Phoenix, AZ</td>\n",
       "      <td>United States</td>\n",
       "      <td>33.434444</td>\n",
       "      <td>-112.011667</td>\n",
       "      <td>PHX</td>\n",
       "      <td>PHEONIX SKY HARBOR INTL.</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Mesa Airlines, Inc. (dba: Us Airways Express)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>53.0</td>\n",
       "      <td>VMC</td>\n",
       "      <td>Standing</td>\n",
       "      <td>Probable Cause</td>\n",
       "      <td>29-01-2009</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63888</th>\n",
       "      <td>20080107X00025</td>\n",
       "      <td>Accident</td>\n",
       "      <td>SEA08LA051</td>\n",
       "      <td>2007-12-25</td>\n",
       "      <td>Honolulu, HI</td>\n",
       "      <td>United States</td>\n",
       "      <td>21.318611</td>\n",
       "      <td>-157.9225</td>\n",
       "      <td>HNL</td>\n",
       "      <td>HONOLULU INTERNATIONAL</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Northwest Airlines, Inc.</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>291.0</td>\n",
       "      <td>VMC</td>\n",
       "      <td>Cruise</td>\n",
       "      <td>Probable Cause</td>\n",
       "      <td>14-01-2009</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>88760</th>\n",
       "      <td>20221108106264</td>\n",
       "      <td>Accident</td>\n",
       "      <td>CEN23LA030</td>\n",
       "      <td>2022-11-06</td>\n",
       "      <td>Murdo, SD</td>\n",
       "      <td>United States</td>\n",
       "      <td>4351115</td>\n",
       "      <td>59652314</td>\n",
       "      <td>8F6</td>\n",
       "      <td>MURDO MUNICIPLE AIRPORT</td>\n",
       "      <td>...</td>\n",
       "      <td>Personal</td>\n",
       "      <td>Kerry Fender</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>Unk</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>16-11-2022</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>88762</th>\n",
       "      <td>20221107106256</td>\n",
       "      <td>Accident</td>\n",
       "      <td>CEN23LA028</td>\n",
       "      <td>2022-11-07</td>\n",
       "      <td>Slidell, LA</td>\n",
       "      <td>United States</td>\n",
       "      <td>302115N</td>\n",
       "      <td>0089497W</td>\n",
       "      <td>ASD</td>\n",
       "      <td>SLIDELL AIRPORT</td>\n",
       "      <td>...</td>\n",
       "      <td>Positioning</td>\n",
       "      <td>Air Reldan, Inc.</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>IMC</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>23-11-2022</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>88786</th>\n",
       "      <td>20221115106296</td>\n",
       "      <td>Accident</td>\n",
       "      <td>CEN23LA037</td>\n",
       "      <td>2022-11-15</td>\n",
       "      <td>Pewaukee, WI</td>\n",
       "      <td>United States</td>\n",
       "      <td>043228N</td>\n",
       "      <td>0881413W</td>\n",
       "      <td>UES</td>\n",
       "      <td>WAUKESHA COUNTY</td>\n",
       "      <td>...</td>\n",
       "      <td>Business</td>\n",
       "      <td>UAS TRANSERVICES INC</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>IMC</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>09-12-2022</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>88822</th>\n",
       "      <td>20221125106361</td>\n",
       "      <td>Accident</td>\n",
       "      <td>CEN23FA045</td>\n",
       "      <td>2022-11-25</td>\n",
       "      <td>Mount Comfort, IN</td>\n",
       "      <td>United States</td>\n",
       "      <td>394934N</td>\n",
       "      <td>0855524W</td>\n",
       "      <td>MQJ</td>\n",
       "      <td>INDIANAPOLIS RGNL</td>\n",
       "      <td>...</td>\n",
       "      <td>Positioning</td>\n",
       "      <td>Verijet</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>IMC</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>09-12-2022</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>88837</th>\n",
       "      <td>20221209106436</td>\n",
       "      <td>Accident</td>\n",
       "      <td>ERA23LA081</td>\n",
       "      <td>2022-12-01</td>\n",
       "      <td>Guantanamo Bay, OF</td>\n",
       "      <td>Cuba</td>\n",
       "      <td>195422N</td>\n",
       "      <td>0751159W</td>\n",
       "      <td>MUGM</td>\n",
       "      <td>GUANTANAMO BAY NAVAL AIR STATI</td>\n",
       "      <td>...</td>\n",
       "      <td>Positioning</td>\n",
       "      <td>REVA, Inc.</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>VMC</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>20-12-2022</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>987 rows Ã— 31 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             Event.Id Investigation.Type Accident.Number  Event.Date  \\\n",
       "59584  20050927X01540           Incident      LAX05IA312  2005-09-21   \n",
       "62142  20070321X00315           Accident      NYC07MA073  2007-03-08   \n",
       "62453  20070510X00542           Incident      MIA07IA088  2007-05-02   \n",
       "62697  20070627X00819           Incident      LAX07IA191  2007-06-13   \n",
       "63888  20080107X00025           Accident      SEA08LA051  2007-12-25   \n",
       "...               ...                ...             ...         ...   \n",
       "88760  20221108106264           Accident      CEN23LA030  2022-11-06   \n",
       "88762  20221107106256           Accident      CEN23LA028  2022-11-07   \n",
       "88786  20221115106296           Accident      CEN23LA037  2022-11-15   \n",
       "88822  20221125106361           Accident      CEN23FA045  2022-11-25   \n",
       "88837  20221209106436           Accident      ERA23LA081  2022-12-01   \n",
       "\n",
       "                 Location        Country   Latitude    Longitude Airport.Code  \\\n",
       "59584     Los Angeles, CA  United States    33.9425  -118.408056         KLAX   \n",
       "62142     PRINCEVILLE, HI  United States       22.2  -159.433333         HI01   \n",
       "62453         Atlanta, GA  United States  33.636666   -84.428056          ATL   \n",
       "62697         Phoenix, AZ  United States  33.434444  -112.011667          PHX   \n",
       "63888        Honolulu, HI  United States  21.318611    -157.9225          HNL   \n",
       "...                   ...            ...        ...          ...          ...   \n",
       "88760           Murdo, SD  United States    4351115     59652314          8F6   \n",
       "88762         Slidell, LA  United States    302115N     0089497W          ASD   \n",
       "88786        Pewaukee, WI  United States    043228N     0881413W          UES   \n",
       "88822   Mount Comfort, IN  United States    394934N     0855524W          MQJ   \n",
       "88837  Guantanamo Bay, OF           Cuba    195422N     0751159W         MUGM   \n",
       "\n",
       "                         Airport.Name  ... Purpose.of.flight  \\\n",
       "59584       LOS ANGELES INTERNATIONAL  ...               NaN   \n",
       "62142                     PRINCEVILLE  ...               NaN   \n",
       "62453    HARTSFIELD - JACKSON ATLANTA  ...               NaN   \n",
       "62697        PHEONIX SKY HARBOR INTL.  ...               NaN   \n",
       "63888          HONOLULU INTERNATIONAL  ...               NaN   \n",
       "...                               ...  ...               ...   \n",
       "88760         MURDO MUNICIPLE AIRPORT  ...          Personal   \n",
       "88762                 SLIDELL AIRPORT  ...       Positioning   \n",
       "88786                 WAUKESHA COUNTY  ...          Business   \n",
       "88822               INDIANAPOLIS RGNL  ...       Positioning   \n",
       "88837  GUANTANAMO BAY NAVAL AIR STATI  ...       Positioning   \n",
       "\n",
       "                                         Air.carrier Total.Fatal.Injuries  \\\n",
       "59584                         Jet Blue Airways, Inc.                  0.0   \n",
       "62142                         Heli-usa Airways, Inc.                  4.0   \n",
       "62453                     Omni Air International Inc                  0.0   \n",
       "62697  Mesa Airlines, Inc. (dba: Us Airways Express)                  0.0   \n",
       "63888                       Northwest Airlines, Inc.                  0.0   \n",
       "...                                              ...                  ...   \n",
       "88760                                   Kerry Fender                  0.0   \n",
       "88762                               Air Reldan, Inc.                  0.0   \n",
       "88786                           UAS TRANSERVICES INC                  0.0   \n",
       "88822                                        Verijet                  0.0   \n",
       "88837                                     REVA, Inc.                  0.0   \n",
       "\n",
       "      Total.Serious.Injuries Total.Minor.Injuries Total.Uninjured  \\\n",
       "59584                    0.0                  0.0           146.0   \n",
       "62142                    3.0                  NaN             NaN   \n",
       "62453                    0.0                  0.0           306.0   \n",
       "62697                    0.0                  0.0            53.0   \n",
       "63888                    1.0                  3.0           291.0   \n",
       "...                      ...                  ...             ...   \n",
       "88760                    0.0                  0.0             2.0   \n",
       "88762                    0.0                  1.0             0.0   \n",
       "88786                    2.0                  0.0             1.0   \n",
       "88822                    0.0                  0.0             1.0   \n",
       "88837                    0.0                  0.0             4.0   \n",
       "\n",
       "      Weather.Condition  Broad.phase.of.flight   Report.Status  \\\n",
       "59584               VMC                Takeoff  Probable Cause   \n",
       "62142               VMC            Maneuvering  Probable Cause   \n",
       "62453               VMC                Descent  Probable Cause   \n",
       "62697               VMC               Standing  Probable Cause   \n",
       "63888               VMC                 Cruise  Probable Cause   \n",
       "...                 ...                    ...             ...   \n",
       "88760               Unk                    NaN             NaN   \n",
       "88762               IMC                    NaN             NaN   \n",
       "88786               IMC                    NaN             NaN   \n",
       "88822               IMC                    NaN             NaN   \n",
       "88837               VMC                    NaN             NaN   \n",
       "\n",
       "      Publication.Date  \n",
       "59584       25-11-2008  \n",
       "62142       17-06-2009  \n",
       "62453       29-01-2009  \n",
       "62697       29-01-2009  \n",
       "63888       14-01-2009  \n",
       "...                ...  \n",
       "88760       16-11-2022  \n",
       "88762       23-11-2022  \n",
       "88786       09-12-2022  \n",
       "88822       09-12-2022  \n",
       "88837       20-12-2022  \n",
       "\n",
       "[987 rows x 31 columns]"
      ]
     },
     "execution_count": 89,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    " # View top 30 makes\n",
    "aviation_df['Airport.Name'] = aviation_df['Airport.Name'].str.upper().str.strip()\n",
    "aviation_df\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "id": "934354f6-0415-4082-a04c-0a7308c54498",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Remove duplicate rows\n",
    "aviation_df.drop_duplicates(inplace=True)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "id": "d639c1e2-43ea-4ae9-99cb-117a73c2baae",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Convert Event.Date and Publication.Date to datetime objects\n",
    "aviation_df['Event.Date'] = pd.to_datetime(aviation_df['Event.Date'], errors='coerce')\n",
    "aviation_df['Publication.Date'] = pd.to_datetime(aviation_df['Publication.Date'], dayfirst=True, errors='coerce')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "id": "2228e180-e539-4667-9415-020336834155",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Convert Event.Date column to datetime\n",
    "aviation_df['Event.Date'] = pd.to_datetime(aviation_df['Event.Date'], errors='coerce')\n",
    "\n",
    "# Create new columns for year and month\n",
    "aviation_df['Year'] = aviation_df['Event.Date'].dt.year\n",
    "aviation_df['Month'] = aviation_df['Event.Date'].dt.month\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "id": "025fccd1-b738-4946-bd49-841a7a7cb3a0",
   "metadata": {},
   "outputs": [],
   "source": [
    "aviation_df = aviation_df.drop_duplicates()\n",
    "aviation_df['Event.Date'] = pd.to_datetime(aviation_df['Event.Date'], errors='coerce')\n",
    "aviation_df['Year'] = aviation_df['Event.Date'].dt.year\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "52a7794c-88e0-4a68-9b2d-0077eede7e38",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Convert injury columns to integers\n",
    "aviation_df[injury_columns] = aviation_df[injury_columns].astype(int)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 134,
   "id": "ef4ec18f-2cc2-4be2-9ef0-69d5231aad5c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "      Event.Date Publication.Date  Total.Injuries\n",
      "59584 2005-09-21       2008-11-25             0.0\n",
      "62142 2007-03-08       2009-06-17             7.0\n",
      "62453 2007-05-02       2009-01-29             0.0\n",
      "62697 2007-06-13       2009-01-29             0.0\n",
      "63888 2007-12-25       2009-01-14             4.0\n"
     ]
    }
   ],
   "source": [
    "print(aviation_df[['Event.Date', 'Publication.Date', 'Total.Injuries']].head())\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 152,
   "id": "40f5c368-5cb1-46be-9a5a-e3932bcd956c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['Total.Fatal.Injuries', 'Total.Serious.Injuries', 'Total.Minor.Injuries', 'Total.Uninjured']\n"
     ]
    }
   ],
   "source": [
    "print(df.columns.tolist())\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "12599e80-3e2b-4b75-a313-b4988f3fd9df",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python [conda env:base] *",
   "language": "python",
   "name": "conda-base-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
